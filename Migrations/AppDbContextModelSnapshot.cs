// <auto-generated />
using System;
using DespesasAutomotivas.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DespesasAutomotivas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DespesasAutomotivas.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cor");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<DateTime?>("ExcluidoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("excluido_em");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("placa");

                    b.Property<string>("Quilometragem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("quilometragem");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("versao");

                    b.HasKey("Id");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("DespesasAutomotivas.Models.Manutencoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarroId")
                        .HasColumnType("int")
                        .HasColumnName("carro_id");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_entrada");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_saida");

                    b.Property<string>("DescricaoServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao_servico");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<DateTime?>("ExcluidoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("excluido_em");

                    b.Property<TimeSpan>("HoraEntrada")
                        .HasColumnType("time")
                        .HasColumnName("hora_entrada");

                    b.Property<TimeSpan?>("HoraSaida")
                        .HasColumnType("time")
                        .HasColumnName("hora_saida");

                    b.Property<int>("OficinaId")
                        .HasColumnType("int")
                        .HasColumnName("oficina_id");

                    b.Property<string>("PecasSubstituidas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pecas_substituidas");

                    b.Property<string>("ServicosExecutados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("servicos_executados");

                    b.Property<decimal>("ValorTotalPecas")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_total_pecas");

                    b.Property<decimal>("ValorTotalServicos")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_total_servicos");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("OficinaId");

                    b.ToTable("manutencoes");
                });

            modelBuilder.Entity("DespesasAutomotivas.Models.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("endereco");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit")
                        .HasColumnName("excluido");

                    b.Property<DateTime?>("ExcluidoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("excluido_em");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("oficina");
                });

            modelBuilder.Entity("DespesasAutomotivas.Models.Manutencoes", b =>
                {
                    b.HasOne("DespesasAutomotivas.Models.Carro", "Carro")
                        .WithMany("Manutencoes")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DespesasAutomotivas.Models.Oficina", "Oficina")
                        .WithMany("Manutencoes")
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Oficina");
                });

            modelBuilder.Entity("DespesasAutomotivas.Models.Carro", b =>
                {
                    b.Navigation("Manutencoes");
                });

            modelBuilder.Entity("DespesasAutomotivas.Models.Oficina", b =>
                {
                    b.Navigation("Manutencoes");
                });
#pragma warning restore 612, 618
        }
    }
}
